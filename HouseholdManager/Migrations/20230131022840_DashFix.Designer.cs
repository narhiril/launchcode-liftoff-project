// <auto-generated />
using System;
using HouseholdManager.Areas.Identity.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HouseholdManager.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
<<<<<<<< HEAD:HouseholdManager/Migrations/20230131022840_DashFix.Designer.cs
    [Migration("20230131022840_DashFix")]
    partial class DashFix
========
    [Migration("20230201034523_IconCharacterFix")]
    partial class IconCharacterFix
>>>>>>>> feee6616549db05ee9b8a478a1a17fefba228848:HouseholdManager/Migrations/20230201034523_IconCharacterFix.Designer.cs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HouseholdManager.Models.Household", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

<<<<<<<< HEAD:HouseholdManager/Migrations/20230131022840_DashFix.Designer.cs
                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);
========
                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HouseholdId"), 1L, 1);

                    b.Property<string>("HouseholdName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("HouseholdId");

                    b.ToTable("Households");

                    b.HasData(
                        new
                        {
                            HouseholdId = 1,
                            HouseholdName = "DefaultHousehold",
                            Icon = ""
                        });
                });

            modelBuilder.Entity("HouseholdManager.Models.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"), 1L, 1);

                    b.Property<int>("HouseholdId")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MemberType")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberId");

                    b.HasIndex("HouseholdId");

                    b.HasIndex("UserId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            HouseholdId = 1,
                            Icon = "👩‍🔧",
                            MemberType = "Admin",
                            UserName = "defaultAdmin@yahoo.com"
                        },
                        new
                        {
                            MemberId = 2,
                            HouseholdId = 1,
                            Icon = "👩‍💼",
                            MemberType = "Member",
                            UserName = "defaultUser@yahoo.com"
                        });
                });

            modelBuilder.Entity("HouseholdManager.Models.Mission", b =>
                {
                    b.Property<int>("MissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MissionId"), 1L, 1);

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("MissionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("MissionId");

                    b.HasIndex("MemberId");

                    b.HasIndex("RoomId");

                    b.ToTable("Missions");

                    b.HasData(
                        new
                        {
                            MissionId = 1,
                            Completed = false,
                            DueDate = new DateTime(2023, 1, 31, 21, 45, 23, 545, DateTimeKind.Local).AddTicks(9822),
                            MemberId = 2,
                            MissionName = "Wash dishes",
                            Point = 2,
                            RoomId = 1
                        },
                        new
                        {
                            MissionId = 2,
                            Completed = false,
                            DueDate = new DateTime(2023, 1, 31, 21, 45, 23, 545, DateTimeKind.Local).AddTicks(9860),
                            MemberId = 1,
                            MissionName = "Make bed",
                            Point = 1,
                            RoomId = 5
                        },
                        new
                        {
                            MissionId = 3,
                            Completed = false,
                            DueDate = new DateTime(2023, 1, 31, 21, 45, 23, 545, DateTimeKind.Local).AddTicks(9870),
                            MemberId = 2,
                            MissionName = "Make bed",
                            Point = 1,
                            RoomId = 3
                        },
                        new
                        {
                            MissionId = 4,
                            Completed = false,
                            DueDate = new DateTime(2023, 1, 31, 21, 45, 23, 545, DateTimeKind.Local).AddTicks(9879),
                            MemberId = 1,
                            MissionName = "Mow lawn",
                            Point = 5,
                            RoomId = 9
                        },
                        new
                        {
                            MissionId = 5,
                            Completed = false,
                            DueDate = new DateTime(2023, 1, 31, 21, 45, 23, 545, DateTimeKind.Local).AddTicks(9889),
                            MemberId = 1,
                            MissionName = "Make dinner",
                            Point = 4,
                            RoomId = 1
                        });
                });

            modelBuilder.Entity("HouseholdManager.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"), 1L, 1);
>>>>>>>> feee6616549db05ee9b8a478a1a17fefba228848:HouseholdManager/Migrations/20230201034523_IconCharacterFix.Designer.cs

                    b.Property<string>("Icon")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Households");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Icon = "",
                            Name = "DefaultHousehold"
                        });
                });

            modelBuilder.Entity("HouseholdManager.Models.Member", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("HouseholdId")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MemberType")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("HouseholdId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "a1addd14-6340-4840-95c2-db12554843e5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f1729b34-06ae-4d71-b95e-34a5910d9c74",
                            DisplayName = "",
                            Email = "defaultAdmin@yahoo.com",
                            EmailConfirmed = false,
                            HouseholdId = 1,
                            Icon = "👩‍🔧",
                            LockoutEnabled = true,
                            MemberType = "Admin",
                            NormalizedEmail = "DEFAULTADMIN@YAHOO.COM",
                            NormalizedUserName = "DEFAULTADMIN@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEHyH1NbGY+A3AoHM2JAPvoNaL27+sJ9uB9uLVOduZEfKph1Q6RBkCnQnOFZWucNOOg==",
                            PhoneNumber = "111-222-3333",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0c8a31f2-5b08-40dc-993d-e434f1486935",
                            TwoFactorEnabled = false,
                            UserName = "defaultAdmin@yahoo.com"
                        },
                        new
                        {
                            Id = "u1ua87c6-b718-4f48-90a2-458e0a2443e6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "581bc7df-db1c-4c08-abdb-df2aa311cc96",
                            DisplayName = "",
                            Email = "defaultUser@yahoo.com",
                            EmailConfirmed = false,
                            HouseholdId = 1,
                            Icon = "👩‍💼",
                            LockoutEnabled = true,
                            MemberType = "Member",
                            NormalizedEmail = "DEFAULTUSER@YAHOO.COM",
                            NormalizedUserName = "DEFAULTUSER@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGEMivR+UZPZwK3SLUw8TrzbJkhOBta3CXPxMnbx5VDEnKFUrLPuo5k4BcVR4sAzDQ==",
                            PhoneNumber = "111-222-3333",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "80ae73ef-86fe-45fa-b33c-84d88aa04dd6",
                            TwoFactorEnabled = false,
                            UserName = "defaultUser@yahoo.com"
                        });
                });

            modelBuilder.Entity("HouseholdManager.Models.Mission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HouseholdId")
                        .HasColumnType("int");

                    b.Property<string>("MemberId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HouseholdId");

                    b.HasIndex("MemberId");

                    b.HasIndex("RoomId");

                    b.ToTable("Missions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DueDate = new DateTime(2023, 1, 30, 20, 28, 39, 926, DateTimeKind.Local).AddTicks(1442),
                            HouseholdId = 1,
                            MemberId = "u1ua87c6-b718-4f48-90a2-458e0a2443e6",
                            Name = "Wash dishes",
                            Point = 2,
                            RoomId = 1
                        },
                        new
                        {
                            Id = 2,
                            DueDate = new DateTime(2023, 1, 30, 20, 28, 39, 926, DateTimeKind.Local).AddTicks(1480),
                            HouseholdId = 1,
                            MemberId = "a1addd14-6340-4840-95c2-db12554843e5",
                            Name = "Make bed",
                            Point = 1,
                            RoomId = 5
                        },
                        new
                        {
                            Id = 3,
                            DueDate = new DateTime(2023, 1, 30, 20, 28, 39, 926, DateTimeKind.Local).AddTicks(1490),
                            HouseholdId = 1,
                            MemberId = "u1ua87c6-b718-4f48-90a2-458e0a2443e6",
                            Name = "Make bed",
                            Point = 1,
                            RoomId = 3
                        },
                        new
                        {
                            Id = 4,
                            DueDate = new DateTime(2023, 1, 30, 20, 28, 39, 926, DateTimeKind.Local).AddTicks(1499),
                            HouseholdId = 1,
                            MemberId = "a1addd14-6340-4840-95c2-db12554843e5",
                            Name = "Mow lawn",
                            Point = 5,
                            RoomId = 9
                        },
                        new
                        {
                            Id = 5,
                            DueDate = new DateTime(2023, 1, 30, 20, 28, 39, 926, DateTimeKind.Local).AddTicks(1510),
                            HouseholdId = 1,
                            MemberId = "a1addd14-6340-4840-95c2-db12554843e5",
                            Name = "Make dinner",
                            Point = 4,
                            RoomId = 1
                        });
                });

            modelBuilder.Entity("HouseholdManager.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("HouseholdId")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("HouseholdId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HouseholdId = 1,
                            Icon = "🥄",
                            Name = "Kitchen"
                        },
                        new
                        {
                            Id = 2,
                            HouseholdId = 1,
                            Icon = "🧻",
                            Name = "Bathroom"
                        },
                        new
                        {
                            Id = 3,
                            HouseholdId = 1,
                            Icon = "🛏",
                            Name = "Master Bedroom"
                        },
                        new
                        {
                            Id = 4,
                            HouseholdId = 1,
                            Icon = "🛋",
                            Name = "Living Room"
                        },
                        new
                        {
                            Id = 5,
                            HouseholdId = 1,
                            Icon = "🛏",
                            Name = "Bedroom"
                        },
                        new
                        {
                            Id = 6,
                            HouseholdId = 1,
                            Icon = "🛏",
                            Name = "Guest Bedroom"
                        },
                        new
                        {
                            Id = 7,
                            HouseholdId = 1,
                            Icon = "🧻",
                            Name = "Master Bathroom"
                        },
                        new
                        {
                            Id = 8,
                            HouseholdId = 1,
                            Icon = "🍽",
                            Name = "Dining Room"
                        },
                        new
                        {
                            Id = 9,
                            HouseholdId = 1,
                            Icon = "🌳",
                            Name = "Yard"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "fab4fac1-c546-41de-aebc-a14da6895711",
                            ConcurrencyStamp = "1",
                            Name = "Administrator",
                            NormalizedName = "Administrator"
                        },
                        new
                        {
                            Id = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            ConcurrencyStamp = "2",
                            Name = "User",
                            NormalizedName = "User"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

<<<<<<<< HEAD:HouseholdManager/Migrations/20230131022840_DashFix.Designer.cs
========
            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "a1addd14-6340-4840-95c2-db12554843e5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ab3eeed0-defd-41e9-b1bd-36661b62829d",
                            Email = "defaultAdmin@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "DEFAULTADMIN@YAHOO.COM",
                            NormalizedUserName = "DEFAULTADMIN@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAENFo9vgxEGXoObDLtNeg1E4EAhglostSfvFOkO49dwmG408JAN2qbOfAk4yM/8pG+A==",
                            PhoneNumber = "111-222-3333",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8bbd6713-9a6a-4572-a0a2-7f159540fba0",
                            TwoFactorEnabled = false,
                            UserName = "defaultAdmin@yahoo.com"
                        },
                        new
                        {
                            Id = "u1ua87c6-b718-4f48-90a2-458e0a2443e6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "87e350eb-1d91-4711-96d9-f9c46cf314fe",
                            Email = "defaultUser@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "DEFAULTUSER@YAHOO.COM",
                            NormalizedUserName = "DEFAULTUSER@YAHOO.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEK5S9m0kGIvt8YgHuLX9cGIRE8T2ZlaAZJL8V3rcHEh+EHGunYODzGG/LClIuugq6w==",
                            PhoneNumber = "111-222-3333",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "33ca19e6-a47d-4a14-b372-519aa161a80d",
                            TwoFactorEnabled = false,
                            UserName = "defaultUser@yahoo.com"
                        });
                });

>>>>>>>> feee6616549db05ee9b8a478a1a17fefba228848:HouseholdManager/Migrations/20230201034523_IconCharacterFix.Designer.cs
            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "a1addd14-6340-4840-95c2-db12554843e5",
                            RoleId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            UserId = "a1addd14-6340-4840-95c2-db12554843e5",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            UserId = "u1ua87c6-b718-4f48-90a2-458e0a2443e6",
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HouseholdManager.Models.Member", b =>
                {
                    b.HasOne("HouseholdManager.Models.Household", "Household")
                        .WithMany("Members")
                        .HasForeignKey("HouseholdId");

                    b.Navigation("Household");
                });

            modelBuilder.Entity("HouseholdManager.Models.Mission", b =>
                {
                    b.HasOne("HouseholdManager.Models.Household", "Household")
                        .WithMany("Missions")
                        .HasForeignKey("HouseholdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HouseholdManager.Models.Member", "Member")
                        .WithMany("Missions")
                        .HasForeignKey("MemberId");

                    b.HasOne("HouseholdManager.Models.Room", "Room")
                        .WithMany("Missions")
                        .HasForeignKey("RoomId");

                    b.Navigation("Household");

                    b.Navigation("Member");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HouseholdManager.Models.Room", b =>
                {
                    b.HasOne("HouseholdManager.Models.Household", "Household")
                        .WithMany("Rooms")
                        .HasForeignKey("HouseholdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Household");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("HouseholdManager.Models.Member", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("HouseholdManager.Models.Member", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HouseholdManager.Models.Member", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("HouseholdManager.Models.Member", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HouseholdManager.Models.Household", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Missions");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("HouseholdManager.Models.Member", b =>
                {
                    b.Navigation("Missions");
                });

            modelBuilder.Entity("HouseholdManager.Models.Room", b =>
                {
                    b.Navigation("Missions");
                });
#pragma warning restore 612, 618
        }
    }
}
